{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "COST",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_SUPPLY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50604051806040016040528060048152602001634275677360e01b81525060405180604001604052806002815260200161212160f11b81525081600090816200005b919062000188565b5060016200006a828262000188565b50505062000087620000816200008d60201b60201c565b62000091565b62000254565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200010e57607f821691505b6020821081036200012f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018357600081815260208120601f850160051c810160208610156200015e5750805b601f850160051c820191505b818110156200017f578281556001016200016a565b5050505b505050565b81516001600160401b03811115620001a457620001a4620000e3565b620001bc81620001b58454620000f9565b8462000135565b602080601f831160018114620001f45760008415620001db5750858301515b600019600386901b1c1916600185901b1785556200017f565b600085815260208120601f198616915b82811015620002255788860151825594840194600190910190840162000204565b5085821015620002445787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61193280620002646000396000f3fe60806040526004361061011f5760003560e01c806370a08231116100a0578063b88d4fde11610064578063b88d4fde146102fd578063bf8fbbd21461031d578063c87b56dd14610332578063e985e9c514610352578063f2fde38b1461039b57600080fd5b806370a0823114610275578063715018a6146102955780638da5cb5b146102aa57806395d89b41146102c8578063a22cb465146102dd57600080fd5b806318160ddd116100e757806318160ddd146101dd57806323b872dd1461020057806332cb6b0c1461022057806342842e0e146102355780636352211e1461025557600080fd5b806301ffc9a71461012457806306fdde0314610159578063081812fc1461017b578063095ea7b3146101b35780631249c58b146101d5575b600080fd5b34801561013057600080fd5b5061014461013f36600461136f565b6103bb565b60405190151581526020015b60405180910390f35b34801561016557600080fd5b5061016e61040d565b60405161015091906113dc565b34801561018757600080fd5b5061019b6101963660046113ef565b61049f565b6040516001600160a01b039091168152602001610150565b3480156101bf57600080fd5b506101d36101ce366004611424565b6104c6565b005b6101d36105e0565b3480156101e957600080fd5b506101f261067f565b604051908152602001610150565b34801561020c57600080fd5b506101d361021b36600461144e565b61068f565b34801561022c57600080fd5b506101f2601c81565b34801561024157600080fd5b506101d361025036600461144e565b6106c0565b34801561026157600080fd5b5061019b6102703660046113ef565b6106db565b34801561028157600080fd5b506101f261029036600461148a565b61073b565b3480156102a157600080fd5b506101d36107c1565b3480156102b657600080fd5b506007546001600160a01b031661019b565b3480156102d457600080fd5b5061016e6107d3565b3480156102e957600080fd5b506101d36102f83660046114a5565b6107e2565b34801561030957600080fd5b506101d36103183660046114f7565b6107f1565b34801561032957600080fd5b506101f2600081565b34801561033e57600080fd5b5061016e61034d3660046113ef565b610829565b34801561035e57600080fd5b5061014461036d3660046115d3565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b3480156103a757600080fd5b506101d36103b636600461148a565b610939565b60006001600160e01b031982166380ac58cd60e01b14806103ec57506001600160e01b03198216635b5e139f60e01b145b8061040757506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461041c90611606565b80601f016020809104026020016040519081016040528092919081815260200182805461044890611606565b80156104955780601f1061046a57610100808354040283529160200191610495565b820191906000526020600020905b81548152906001019060200180831161047857829003601f168201915b5050505050905090565b60006104aa826109b2565b506000908152600460205260409020546001600160a01b031690565b60006104d1826106db565b9050806001600160a01b0316836001600160a01b0316036105435760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061055f575061055f813361036d565b6105d15760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161053a565b6105db8383610a11565b505050565b600854601c10156106335760405162461bcd60e51b815260206004820152601860248201527f596f752063616e206e6f74206d696e7420616e796d6f72650000000000000000604482015260640161053a565b610641600880546001019055565b6106533361064e60085490565b610a7f565b61067d61065f60085490565b6040518060800160405280604181526020016118bc60419139610a99565b565b600061068a60085490565b905090565b6106993382610b2c565b6106b55760405162461bcd60e51b815260040161053a90611640565b6105db838383610baa565b6105db838383604051806020016040528060008152506107f1565b6000818152600260205260408120546001600160a01b0316806104075760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161053a565b60006001600160a01b0382166107a55760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161053a565b506001600160a01b031660009081526003602052604090205490565b6107c9610d0e565b61067d6000610d68565b60606001805461041c90611606565b6107ed338383610dba565b5050565b6107fb3383610b2c565b6108175760405162461bcd60e51b815260040161053a90611640565b61082384848484610e88565b50505050565b6060610834826109b2565b6000828152600660205260408120805461084d90611606565b80601f016020809104026020016040519081016040528092919081815260200182805461087990611606565b80156108c65780601f1061089b576101008083540402835291602001916108c6565b820191906000526020600020905b8154815290600101906020018083116108a957829003601f168201915b5050505050905060006108e460408051602081019091526000815290565b905080516000036108f6575092915050565b81511561092857808260405160200161091092919061168d565b60405160208183030381529060405292505050919050565b61093184610ebb565b949350505050565b610941610d0e565b6001600160a01b0381166109a65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161053a565b6109af81610d68565b50565b6000818152600260205260409020546001600160a01b03166109af5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161053a565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610a46826106db565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6107ed828260405180602001604052806000815250610f2f565b6000828152600260205260409020546001600160a01b0316610b145760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b606482015260840161053a565b60008281526006602052604090206105db828261170a565b600080610b38836106db565b9050806001600160a01b0316846001600160a01b03161480610b7f57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806109315750836001600160a01b0316610b988461049f565b6001600160a01b031614949350505050565b826001600160a01b0316610bbd826106db565b6001600160a01b031614610be35760405162461bcd60e51b815260040161053a906117ca565b6001600160a01b038216610c455760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161053a565b826001600160a01b0316610c58826106db565b6001600160a01b031614610c7e5760405162461bcd60e51b815260040161053a906117ca565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6007546001600160a01b0316331461067d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161053a565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610e1b5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161053a565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610e93848484610baa565b610e9f84848484610f62565b6108235760405162461bcd60e51b815260040161053a9061180f565b6060610ec6826109b2565b6000610edd60408051602081019091526000815290565b90506000815111610efd5760405180602001604052806000815250610f28565b80610f0784611063565b604051602001610f1892919061168d565b6040516020818303038152906040525b9392505050565b610f3983836110f6565b610f466000848484610f62565b6105db5760405162461bcd60e51b815260040161053a9061180f565b60006001600160a01b0384163b1561105857604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610fa6903390899088908890600401611861565b6020604051808303816000875af1925050508015610fe1575060408051601f3d908101601f19168201909252610fde9181019061189e565b60015b61103e573d80801561100f576040519150601f19603f3d011682016040523d82523d6000602084013e611014565b606091505b5080516000036110365760405162461bcd60e51b815260040161053a9061180f565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610931565b506001949350505050565b6060600061107083611281565b600101905060008167ffffffffffffffff811115611090576110906114e1565b6040519080825280601f01601f1916602001820160405280156110ba576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846110c457509392505050565b6001600160a01b03821661114c5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161053a565b6000818152600260205260409020546001600160a01b0316156111b15760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161053a565b6000818152600260205260409020546001600160a01b0316156112165760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161053a565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106112c05772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106112ec576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061130a57662386f26fc10000830492506010015b6305f5e1008310611322576305f5e100830492506008015b612710831061133657612710830492506004015b60648310611348576064830492506002015b600a83106104075760010192915050565b6001600160e01b0319811681146109af57600080fd5b60006020828403121561138157600080fd5b8135610f2881611359565b60005b838110156113a757818101518382015260200161138f565b50506000910152565b600081518084526113c881602086016020860161138c565b601f01601f19169290920160200192915050565b602081526000610f2860208301846113b0565b60006020828403121561140157600080fd5b5035919050565b80356001600160a01b038116811461141f57600080fd5b919050565b6000806040838503121561143757600080fd5b61144083611408565b946020939093013593505050565b60008060006060848603121561146357600080fd5b61146c84611408565b925061147a60208501611408565b9150604084013590509250925092565b60006020828403121561149c57600080fd5b610f2882611408565b600080604083850312156114b857600080fd5b6114c183611408565b9150602083013580151581146114d657600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561150d57600080fd5b61151685611408565b935061152460208601611408565b925060408501359150606085013567ffffffffffffffff8082111561154857600080fd5b818701915087601f83011261155c57600080fd5b81358181111561156e5761156e6114e1565b604051601f8201601f19908116603f01168101908382118183101715611596576115966114e1565b816040528281528a60208487010111156115af57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156115e657600080fd5b6115ef83611408565b91506115fd60208401611408565b90509250929050565b600181811c9082168061161a57607f821691505b60208210810361163a57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b6000835161169f81846020880161138c565b8351908301906116b381836020880161138c565b01949350505050565b601f8211156105db57600081815260208120601f850160051c810160208610156116e35750805b601f850160051c820191505b81811015611702578281556001016116ef565b505050505050565b815167ffffffffffffffff811115611724576117246114e1565b611738816117328454611606565b846116bc565b602080601f83116001811461176d57600084156117555750858301515b600019600386901b1c1916600185901b178555611702565b600085815260208120601f198616915b8281101561179c5788860151825594840194600190910190840161177d565b50858210156117ba5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611894908301846113b0565b9695505050505050565b6000602082840312156118b057600080fd5b8151610f288161135956fe697066732f62616679626569656e67796a36656c6d727477623373793472366c333368736a61627533697637346e75737a3478797335696537626774637073752fa26469706673582212206b351f34092dad81b517db59d32b16cd4f86685aa880bb94caeacea4d0f93b2f64736f6c63430008140033",
    "sourceMap": "280:904:30:-:0;;;609:37;;;;;;;;;;1390:113:18;;;;;;;;;;;;;-1:-1:-1;;;1390:113:18;;;;;;;;;;;;;;;;-1:-1:-1;;;1390:113:18;;;1464:5;1456;:13;;;;;;:::i;:::-;-1:-1:-1;1479:7:18;:17;1489:7;1479;:17;:::i;:::-;;1390:113;;936:32:17;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;280:904:30;;640:96:24;719:10;;640:96::o;2433:187:17:-;2525:6;;;-1:-1:-1;;;;;2541:17:17;;;-1:-1:-1;;;;;;2541:17:17;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:127:32:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:32;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:32;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:32;;;2580:26;2531:89;-1:-1:-1;;1335:1:32;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:32;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:32;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:32;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:32:o;:::-;280:904:30;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061011f5760003560e01c806370a08231116100a0578063b88d4fde11610064578063b88d4fde146102fd578063bf8fbbd21461031d578063c87b56dd14610332578063e985e9c514610352578063f2fde38b1461039b57600080fd5b806370a0823114610275578063715018a6146102955780638da5cb5b146102aa57806395d89b41146102c8578063a22cb465146102dd57600080fd5b806318160ddd116100e757806318160ddd146101dd57806323b872dd1461020057806332cb6b0c1461022057806342842e0e146102355780636352211e1461025557600080fd5b806301ffc9a71461012457806306fdde0314610159578063081812fc1461017b578063095ea7b3146101b35780631249c58b146101d5575b600080fd5b34801561013057600080fd5b5061014461013f36600461136f565b6103bb565b60405190151581526020015b60405180910390f35b34801561016557600080fd5b5061016e61040d565b60405161015091906113dc565b34801561018757600080fd5b5061019b6101963660046113ef565b61049f565b6040516001600160a01b039091168152602001610150565b3480156101bf57600080fd5b506101d36101ce366004611424565b6104c6565b005b6101d36105e0565b3480156101e957600080fd5b506101f261067f565b604051908152602001610150565b34801561020c57600080fd5b506101d361021b36600461144e565b61068f565b34801561022c57600080fd5b506101f2601c81565b34801561024157600080fd5b506101d361025036600461144e565b6106c0565b34801561026157600080fd5b5061019b6102703660046113ef565b6106db565b34801561028157600080fd5b506101f261029036600461148a565b61073b565b3480156102a157600080fd5b506101d36107c1565b3480156102b657600080fd5b506007546001600160a01b031661019b565b3480156102d457600080fd5b5061016e6107d3565b3480156102e957600080fd5b506101d36102f83660046114a5565b6107e2565b34801561030957600080fd5b506101d36103183660046114f7565b6107f1565b34801561032957600080fd5b506101f2600081565b34801561033e57600080fd5b5061016e61034d3660046113ef565b610829565b34801561035e57600080fd5b5061014461036d3660046115d3565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b3480156103a757600080fd5b506101d36103b636600461148a565b610939565b60006001600160e01b031982166380ac58cd60e01b14806103ec57506001600160e01b03198216635b5e139f60e01b145b8061040757506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461041c90611606565b80601f016020809104026020016040519081016040528092919081815260200182805461044890611606565b80156104955780601f1061046a57610100808354040283529160200191610495565b820191906000526020600020905b81548152906001019060200180831161047857829003601f168201915b5050505050905090565b60006104aa826109b2565b506000908152600460205260409020546001600160a01b031690565b60006104d1826106db565b9050806001600160a01b0316836001600160a01b0316036105435760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061055f575061055f813361036d565b6105d15760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161053a565b6105db8383610a11565b505050565b600854601c10156106335760405162461bcd60e51b815260206004820152601860248201527f596f752063616e206e6f74206d696e7420616e796d6f72650000000000000000604482015260640161053a565b610641600880546001019055565b6106533361064e60085490565b610a7f565b61067d61065f60085490565b6040518060800160405280604181526020016118bc60419139610a99565b565b600061068a60085490565b905090565b6106993382610b2c565b6106b55760405162461bcd60e51b815260040161053a90611640565b6105db838383610baa565b6105db838383604051806020016040528060008152506107f1565b6000818152600260205260408120546001600160a01b0316806104075760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161053a565b60006001600160a01b0382166107a55760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161053a565b506001600160a01b031660009081526003602052604090205490565b6107c9610d0e565b61067d6000610d68565b60606001805461041c90611606565b6107ed338383610dba565b5050565b6107fb3383610b2c565b6108175760405162461bcd60e51b815260040161053a90611640565b61082384848484610e88565b50505050565b6060610834826109b2565b6000828152600660205260408120805461084d90611606565b80601f016020809104026020016040519081016040528092919081815260200182805461087990611606565b80156108c65780601f1061089b576101008083540402835291602001916108c6565b820191906000526020600020905b8154815290600101906020018083116108a957829003601f168201915b5050505050905060006108e460408051602081019091526000815290565b905080516000036108f6575092915050565b81511561092857808260405160200161091092919061168d565b60405160208183030381529060405292505050919050565b61093184610ebb565b949350505050565b610941610d0e565b6001600160a01b0381166109a65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161053a565b6109af81610d68565b50565b6000818152600260205260409020546001600160a01b03166109af5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161053a565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610a46826106db565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6107ed828260405180602001604052806000815250610f2f565b6000828152600260205260409020546001600160a01b0316610b145760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b606482015260840161053a565b60008281526006602052604090206105db828261170a565b600080610b38836106db565b9050806001600160a01b0316846001600160a01b03161480610b7f57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806109315750836001600160a01b0316610b988461049f565b6001600160a01b031614949350505050565b826001600160a01b0316610bbd826106db565b6001600160a01b031614610be35760405162461bcd60e51b815260040161053a906117ca565b6001600160a01b038216610c455760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161053a565b826001600160a01b0316610c58826106db565b6001600160a01b031614610c7e5760405162461bcd60e51b815260040161053a906117ca565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6007546001600160a01b0316331461067d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161053a565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610e1b5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161053a565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610e93848484610baa565b610e9f84848484610f62565b6108235760405162461bcd60e51b815260040161053a9061180f565b6060610ec6826109b2565b6000610edd60408051602081019091526000815290565b90506000815111610efd5760405180602001604052806000815250610f28565b80610f0784611063565b604051602001610f1892919061168d565b6040516020818303038152906040525b9392505050565b610f3983836110f6565b610f466000848484610f62565b6105db5760405162461bcd60e51b815260040161053a9061180f565b60006001600160a01b0384163b1561105857604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610fa6903390899088908890600401611861565b6020604051808303816000875af1925050508015610fe1575060408051601f3d908101601f19168201909252610fde9181019061189e565b60015b61103e573d80801561100f576040519150601f19603f3d011682016040523d82523d6000602084013e611014565b606091505b5080516000036110365760405162461bcd60e51b815260040161053a9061180f565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610931565b506001949350505050565b6060600061107083611281565b600101905060008167ffffffffffffffff811115611090576110906114e1565b6040519080825280601f01601f1916602001820160405280156110ba576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846110c457509392505050565b6001600160a01b03821661114c5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161053a565b6000818152600260205260409020546001600160a01b0316156111b15760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161053a565b6000818152600260205260409020546001600160a01b0316156112165760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161053a565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106112c05772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106112ec576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061130a57662386f26fc10000830492506010015b6305f5e1008310611322576305f5e100830492506008015b612710831061133657612710830492506004015b60648310611348576064830492506002015b600a83106104075760010192915050565b6001600160e01b0319811681146109af57600080fd5b60006020828403121561138157600080fd5b8135610f2881611359565b60005b838110156113a757818101518382015260200161138f565b50506000910152565b600081518084526113c881602086016020860161138c565b601f01601f19169290920160200192915050565b602081526000610f2860208301846113b0565b60006020828403121561140157600080fd5b5035919050565b80356001600160a01b038116811461141f57600080fd5b919050565b6000806040838503121561143757600080fd5b61144083611408565b946020939093013593505050565b60008060006060848603121561146357600080fd5b61146c84611408565b925061147a60208501611408565b9150604084013590509250925092565b60006020828403121561149c57600080fd5b610f2882611408565b600080604083850312156114b857600080fd5b6114c183611408565b9150602083013580151581146114d657600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561150d57600080fd5b61151685611408565b935061152460208601611408565b925060408501359150606085013567ffffffffffffffff8082111561154857600080fd5b818701915087601f83011261155c57600080fd5b81358181111561156e5761156e6114e1565b604051601f8201601f19908116603f01168101908382118183101715611596576115966114e1565b816040528281528a60208487010111156115af57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156115e657600080fd5b6115ef83611408565b91506115fd60208401611408565b90509250929050565b600181811c9082168061161a57607f821691505b60208210810361163a57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b6000835161169f81846020880161138c565b8351908301906116b381836020880161138c565b01949350505050565b601f8211156105db57600081815260208120601f850160051c810160208610156116e35750805b601f850160051c820191505b81811015611702578281556001016116ef565b505050505050565b815167ffffffffffffffff811115611724576117246114e1565b611738816117328454611606565b846116bc565b602080601f83116001811461176d57600084156117555750858301515b600019600386901b1c1916600185901b178555611702565b600085815260208120601f198616915b8281101561179c5788860151825594840194600190910190840161177d565b50858210156117ba5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611894908301846113b0565b9695505050505050565b6000602082840312156118b057600080fd5b8151610f288161135956fe697066732f62616679626569656e67796a36656c6d727477623373793472366c333368736a61627533697637346e75737a3478797335696537626774637073752fa26469706673582212206b351f34092dad81b517db59d32b16cd4f86685aa880bb94caeacea4d0f93b2f64736f6c63430008140033",
    "sourceMap": "280:904:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:18;;;;;;;;;;-1:-1:-1;1570:300:18;;;;;:::i;:::-;;:::i;:::-;;;565:14:32;;558:22;540:41;;528:2;513:18;1570:300:18;;;;;;;;2471:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;;;;;-1:-1:-1;3935:167:18;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:32;;;1679:51;;1667:2;1652:18;3935:167:18;1533:203:32;3468:406:18;;;;;;;;;;-1:-1:-1;3468:406:18;;;;;:::i;:::-;;:::i;:::-;;706:367:30;;;:::i;1081:98::-;;;;;;;;;;;;;:::i;:::-;;;2324:25:32;;;2312:2;2297:18;1081:98:30;2178:177:32;4612:326:18;;;;;;;;;;-1:-1:-1;4612:326:18;;;;;:::i;:::-;;:::i;416:39:30:-;;;;;;;;;;;;453:2;416:39;;5004:179:18;;;;;;;;;;-1:-1:-1;5004:179:18;;;;;:::i;:::-;;:::i;2190:219::-;;;;;;;;;;-1:-1:-1;2190:219:18;;;;;:::i;:::-;;:::i;1929:204::-;;;;;;;;;;-1:-1:-1;1929:204:18;;;;;:::i;:::-;;:::i;1831:101:17:-;;;;;;;;;;;;;:::i;1201:85::-;;;;;;;;;;-1:-1:-1;1273:6:17;;-1:-1:-1;;;;;1273:6:17;1201:85;;2633:102:18;;;;;;;;;;;;;:::i;4169:153::-;;;;;;;;;;-1:-1:-1;4169:153:18;;;;;:::i;:::-;;:::i;5249:314::-;;;;;;;;;;-1:-1:-1;5249:314:18;;;;;:::i;:::-;;:::i;462:38:30:-;;;;;;;;;;;;493:7;462:38;;482:608:21;;;;;;;;;;-1:-1:-1;482:608:21;;;;;:::i;:::-;;:::i;4388:162:18:-;;;;;;;;;;-1:-1:-1;4388:162:18;;;;;:::i;:::-;-1:-1:-1;;;;;4508:25:18;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162;2081:198:17;;;;;;;;;;-1:-1:-1;2081:198:17;;;;;:::i;:::-;;:::i;1570:300:18:-;1672:4;-1:-1:-1;;;;;;1707:40:18;;-1:-1:-1;;;1707:40:18;;:104;;-1:-1:-1;;;;;;;1763:48:18;;-1:-1:-1;;;1763:48:18;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:27;;;1827:36:18;1688:175;1570:300;-1:-1:-1;;1570:300:18:o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:18;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:18;;3935:167::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;-1:-1:-1;;;;;3605:11:18;:2;-1:-1:-1;;;;;3605:11:18;;3597:57;;;;-1:-1:-1;;;3597:57:18;;5363:2:32;3597:57:18;;;5345:21:32;5402:2;5382:18;;;5375:30;5441:34;5421:18;;;5414:62;-1:-1:-1;;;5492:18:32;;;5485:31;5533:19;;3597:57:18;;;;;;;;;719:10:24;-1:-1:-1;;;;;3686:21:18;;;;:62;;-1:-1:-1;3711:37:18;3728:5;719:10:24;4388:162:18;:::i;3711:37::-;3665:170;;;;-1:-1:-1;;;3665:170:18;;5765:2:32;3665:170:18;;;5747:21:32;5804:2;5784:18;;;5777:30;5843:34;5823:18;;;5816:62;5914:31;5894:18;;;5887:59;5963:19;;3665:170:18;5563:425:32;3665:170:18;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;706:367:30:-;829:9;918:14:25;453:2:30;815:33;;807:70;;;;-1:-1:-1;;;807:70:30;;6542:2:32;807:70:30;;;6524:21:32;6581:2;6561:18;;;6554:30;6620:26;6600:18;;;6593:54;6664:18;;807:70:30;6340:348:32;807:70:30;936:21;:9;1032:19:25;;1050:1;1032:19;;;945:123;936:21:30;968:42;978:10;990:19;:9;918:14:25;;827:112;990:19:30;968:9;:42::i;:::-;1021:44;1034:19;:9;918:14:25;;827:112;1034:19:30;1055:9;;;;;;;;;;;;;;;;;1021:12;:44::i;:::-;706:367::o;1081:98::-;1125:7;1152:19;:9;918:14:25;;827:112;1152:19:30;1145:26;;1081:98;:::o;4612:326:18:-;4801:41;719:10:24;4834:7:18;4801:18;:41::i;:::-;4793:99;;;;-1:-1:-1;;;4793:99:18;;;;;;;:::i;:::-;4903:28;4913:4;4919:2;4923:7;4903:9;:28::i;5004:179::-;5137:39;5154:4;5160:2;5164:7;5137:39;;;;;;;;;;;;:16;:39::i;2190:219::-;2262:7;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:18;;2324:56;;;;-1:-1:-1;;;2324:56:18;;7309:2:32;2324:56:18;;;7291:21:32;7348:2;7328:18;;;7321:30;-1:-1:-1;;;7367:18:32;;;7360:54;7431:18;;2324:56:18;7107:348:32;1929:204:18;2001:7;-1:-1:-1;;;;;2028:19:18;;2020:73;;;;-1:-1:-1;;;2020:73:18;;7662:2:32;2020:73:18;;;7644:21:32;7701:2;7681:18;;;7674:30;7740:34;7720:18;;;7713:62;-1:-1:-1;;;7791:18:32;;;7784:39;7840:19;;2020:73:18;7460:405:32;2020:73:18;-1:-1:-1;;;;;;2110:16:18;;;;;:9;:16;;;;;;;1929:204::o;1831:101:17:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;2633:102:18:-:0;2689:13;2721:7;2714:14;;;;;:::i;4169:153::-;4263:52;719:10:24;4296:8:18;4306;4263:18;:52::i;:::-;4169:153;;:::o;5249:314::-;5417:41;719:10:24;5450:7:18;5417:18;:41::i;:::-;5409:99;;;;-1:-1:-1;;;5409:99:18;;;;;;;:::i;:::-;5518:38;5532:4;5538:2;5542:7;5551:4;5518:13;:38::i;:::-;5249:314;;;;:::o;482:608:21:-;555:13;580:23;595:7;580:14;:23::i;:::-;614;640:19;;;:10;:19;;;;;614:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;669:18;690:10;3395:9:18;;;;;;;;;-1:-1:-1;3395:9:18;;;3319:92;690:10:21;669:31;;779:4;773:18;795:1;773:23;769:70;;-1:-1:-1;819:9:21;482:608;-1:-1:-1;;482:608:21:o;769:70::-;941:23;;:27;937:106;;1015:4;1021:9;998:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;984:48;;;;482:608;;;:::o;937:106::-;1060:23;1075:7;1060:14;:23::i;:::-;1053:30;482:608;-1:-1:-1;;;;482:608:21:o;2081:198:17:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:17;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:17;;8573:2:32;2161:73:17::1;::::0;::::1;8555:21:32::0;8612:2;8592:18;;;8585:30;8651:34;8631:18;;;8624:62;-1:-1:-1;;;8702:18:32;;;8695:36;8748:19;;2161:73:17::1;8371:402:32::0;2161:73:17::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;13466:133:18:-;7321:4;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:18;13539:53;;;;-1:-1:-1;;;13539:53:18;;7309:2:32;13539:53:18;;;7291:21:32;7348:2;7328:18;;;7321:30;-1:-1:-1;;;7367:18:32;;;7360:54;7431:18;;13539:53:18;7107:348:32;12768:171:18;12842:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;12842:29:18;-1:-1:-1;;;;;12842:29:18;;;;;;;;:24;;12895:23;12842:24;12895:14;:23::i;:::-;-1:-1:-1;;;;;12886:46:18;;;;;;;;;;;12768:171;;:::o;8131:108::-;8206:26;8216:2;8220:7;8206:26;;;;;;;;;;;;:9;:26::i;1237:214:21:-;7321:4:18;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:18;1328:75:21;;;;-1:-1:-1;;;1328:75:21;;8980:2:32;1328:75:21;;;8962:21:32;9019:2;8999:18;;;8992:30;9058:34;9038:18;;;9031:62;-1:-1:-1;;;9109:18:32;;;9102:44;9163:19;;1328:75:21;8778:410:32;1328:75:21;1413:19;;;;:10;:19;;;;;:31;1435:9;1413:19;:31;:::i;7540:261:18:-;7633:4;7649:13;7665:23;7680:7;7665:14;:23::i;:::-;7649:39;;7717:5;-1:-1:-1;;;;;7706:16:18;:7;-1:-1:-1;;;;;7706:16:18;;:52;;;-1:-1:-1;;;;;;4508:25:18;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7726:32;7706:87;;;;7786:7;-1:-1:-1;;;;;7762:31:18;:20;7774:7;7762:11;:20::i;:::-;-1:-1:-1;;;;;7762:31:18;;7698:96;7540:261;-1:-1:-1;;;;7540:261:18:o;11423:1233::-;11577:4;-1:-1:-1;;;;;11550:31:18;:23;11565:7;11550:14;:23::i;:::-;-1:-1:-1;;;;;11550:31:18;;11542:81;;;;-1:-1:-1;;;11542:81:18;;;;;;;:::i;:::-;-1:-1:-1;;;;;11641:16:18;;11633:65;;;;-1:-1:-1;;;11633:65:18;;12005:2:32;11633:65:18;;;11987:21:32;12044:2;12024:18;;;12017:30;12083:34;12063:18;;;12056:62;-1:-1:-1;;;12134:18:32;;;12127:34;12178:19;;11633:65:18;11803:400:32;11633:65:18;11878:4;-1:-1:-1;;;;;11851:31:18;:23;11866:7;11851:14;:23::i;:::-;-1:-1:-1;;;;;11851:31:18;;11843:81;;;;-1:-1:-1;;;11843:81:18;;;;;;;:::i;:::-;11993:24;;;;:15;:24;;;;;;;;11986:31;;-1:-1:-1;;;;;;11986:31:18;;;;;;-1:-1:-1;;;;;12461:15:18;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;12461:20:18;;;12495:13;;;;;;;;;:18;;11986:31;12495:18;;;12533:16;;;:7;:16;;;;;;:21;;;;;;;;;;12570:27;;12009:7;;12570:27;;;3538:336;3468:406;;:::o;1359:130:17:-;1273:6;;-1:-1:-1;;;;;1273:6:17;719:10:24;1422:23:17;1414:68;;;;-1:-1:-1;;;1414:68:17;;12410:2:32;1414:68:17;;;12392:21:32;;;12429:18;;;12422:30;12488:34;12468:18;;;12461:62;12540:18;;1414:68:17;12208:356:32;2433:187:17;2525:6;;;-1:-1:-1;;;;;2541:17:17;;;-1:-1:-1;;;;;;2541:17:17;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;13075:307:18:-;13225:8;-1:-1:-1;;;;;13216:17:18;:5;-1:-1:-1;;;;;13216:17:18;;13208:55;;;;-1:-1:-1;;;13208:55:18;;12771:2:32;13208:55:18;;;12753:21:32;12810:2;12790:18;;;12783:30;12849:27;12829:18;;;12822:55;12894:18;;13208:55:18;12569:349:32;13208:55:18;-1:-1:-1;;;;;13273:25:18;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13273:46:18;;;;;;;;;;13334:41;;540::32;;;13334::18;;513:18:32;13334:41:18;;;;;;;13075:307;;;:::o;6424:305::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:47;6643:4;6649:2;6653:7;6662:4;6620:22;:47::i;:::-;6612:110;;;;-1:-1:-1;;;6612:110:18;;;;;;;:::i;2801:276::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;3395:9;;;;;;;;;-1:-1:-1;3395:9:18;;;3319:92;2957:10;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;2801:276;-1:-1:-1;;;2801:276:18:o;8460:309::-;8584:18;8590:2;8594:7;8584:5;:18::i;:::-;8633:53;8664:1;8668:2;8672:7;8681:4;8633:22;:53::i;:::-;8612:150;;;;-1:-1:-1;;;8612:150:18;;;;;;;:::i;14151:831::-;14300:4;-1:-1:-1;;;;;14320:13:18;;1465:19:23;:23;14316:660:18;;14355:71;;-1:-1:-1;;;14355:71:18;;-1:-1:-1;;;;;14355:36:18;;;;;:71;;719:10:24;;14406:4:18;;14412:7;;14421:4;;14355:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14355:71:18;;;;;;;;-1:-1:-1;;14355:71:18;;;;;;;;;;;;:::i;:::-;;;14351:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14593:6;:13;14610:1;14593:18;14589:321;;14635:60;;-1:-1:-1;;;14635:60:18;;;;;;;:::i;14589:321::-;14862:6;14856:13;14847:6;14843:2;14839:15;14832:38;14351:573;-1:-1:-1;;;;;;14476:51:18;-1:-1:-1;;;14476:51:18;;-1:-1:-1;14469:58:18;;14316:660;-1:-1:-1;14961:4:18;14151:831;;;;;;:::o;415:696:26:-;471:13;520:14;537:17;548:5;537:10;:17::i;:::-;557:1;537:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;595:18:26;-1:-1:-1;572:41:26;-1:-1:-1;733:28:26;;;749:2;733:28;788:280;-1:-1:-1;;819:5:26;-1:-1:-1;;;953:2:26;942:14;;937:30;819:5;924:44;1012:2;1003:11;;;-1:-1:-1;1032:21:26;788:280;1032:21;-1:-1:-1;1088:6:26;415:696;-1:-1:-1;;;415:696:26:o;9091:920:18:-;-1:-1:-1;;;;;9170:16:18;;9162:61;;;;-1:-1:-1;;;9162:61:18;;14424:2:32;9162:61:18;;;14406:21:32;;;14443:18;;;14436:30;14502:34;14482:18;;;14475:62;14554:18;;9162:61:18;14222:356:32;9162:61:18;7321:4;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:18;7344:31;9233:58;;;;-1:-1:-1;;;9233:58:18;;14785:2:32;9233:58:18;;;14767:21:32;14824:2;14804:18;;;14797:30;14863;14843:18;;;14836:58;14911:18;;9233:58:18;14583:352:32;9233:58:18;7321:4;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:18;7344:31;9437:58;;;;-1:-1:-1;;;9437:58:18;;14785:2:32;9437:58:18;;;14767:21:32;14824:2;14804:18;;;14797:30;14863;14843:18;;;14836:58;14911:18;;9437:58:18;14583:352:32;9437:58:18;-1:-1:-1;;;;;9837:13:18;;;;;;:9;:13;;;;;;;;:18;;9854:1;9837:18;;;9876:16;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9876:21:18;;;;;9913:33;9884:7;;9837:13;;9913:33;;9837:13;;9913:33;4169:153;;:::o;9889:890:29:-;9942:7;;-1:-1:-1;;;10017:15:29;;10013:99;;-1:-1:-1;;;10052:15:29;;;-1:-1:-1;10095:2:29;10085:12;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;-1:-1:-1;10207:2:29;10197:12;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;-1:-1:-1;10319:2:29;10309:12;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;-1:-1:-1;10429:1:29;10419:11;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;-1:-1:-1;10538:1:29;10528:11;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;-1:-1:-1;10647:1:29;10637:11;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;10766:6;9889:890;-1:-1:-1;;9889:890:29:o;14:131:32:-;-1:-1:-1;;;;;;88:32:32;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:32;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:32;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:32:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:32;;1348:180;-1:-1:-1;1348:180:32:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:32;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:32:o;2360:328::-;2437:6;2445;2453;2506:2;2494:9;2485:7;2481:23;2477:32;2474:52;;;2522:1;2519;2512:12;2474:52;2545:29;2564:9;2545:29;:::i;:::-;2535:39;;2593:38;2627:2;2616:9;2612:18;2593:38;:::i;:::-;2583:48;;2678:2;2667:9;2663:18;2650:32;2640:42;;2360:328;;;;;:::o;2693:186::-;2752:6;2805:2;2793:9;2784:7;2780:23;2776:32;2773:52;;;2821:1;2818;2811:12;2773:52;2844:29;2863:9;2844:29;:::i;2884:347::-;2949:6;2957;3010:2;2998:9;2989:7;2985:23;2981:32;2978:52;;;3026:1;3023;3016:12;2978:52;3049:29;3068:9;3049:29;:::i;:::-;3039:39;;3128:2;3117:9;3113:18;3100:32;3175:5;3168:13;3161:21;3154:5;3151:32;3141:60;;3197:1;3194;3187:12;3141:60;3220:5;3210:15;;;2884:347;;;;;:::o;3236:127::-;3297:10;3292:3;3288:20;3285:1;3278:31;3328:4;3325:1;3318:15;3352:4;3349:1;3342:15;3368:1138;3463:6;3471;3479;3487;3540:3;3528:9;3519:7;3515:23;3511:33;3508:53;;;3557:1;3554;3547:12;3508:53;3580:29;3599:9;3580:29;:::i;:::-;3570:39;;3628:38;3662:2;3651:9;3647:18;3628:38;:::i;:::-;3618:48;;3713:2;3702:9;3698:18;3685:32;3675:42;;3768:2;3757:9;3753:18;3740:32;3791:18;3832:2;3824:6;3821:14;3818:34;;;3848:1;3845;3838:12;3818:34;3886:6;3875:9;3871:22;3861:32;;3931:7;3924:4;3920:2;3916:13;3912:27;3902:55;;3953:1;3950;3943:12;3902:55;3989:2;3976:16;4011:2;4007;4004:10;4001:36;;;4017:18;;:::i;:::-;4092:2;4086:9;4060:2;4146:13;;-1:-1:-1;;4142:22:32;;;4166:2;4138:31;4134:40;4122:53;;;4190:18;;;4210:22;;;4187:46;4184:72;;;4236:18;;:::i;:::-;4276:10;4272:2;4265:22;4311:2;4303:6;4296:18;4351:7;4346:2;4341;4337;4333:11;4329:20;4326:33;4323:53;;;4372:1;4369;4362:12;4323:53;4428:2;4423;4419;4415:11;4410:2;4402:6;4398:15;4385:46;4473:1;4468:2;4463;4455:6;4451:15;4447:24;4440:35;4494:6;4484:16;;;;;;;3368:1138;;;;;;;:::o;4511:260::-;4579:6;4587;4640:2;4628:9;4619:7;4615:23;4611:32;4608:52;;;4656:1;4653;4646:12;4608:52;4679:29;4698:9;4679:29;:::i;:::-;4669:39;;4727:38;4761:2;4750:9;4746:18;4727:38;:::i;:::-;4717:48;;4511:260;;;;;:::o;4776:380::-;4855:1;4851:12;;;;4898;;;4919:61;;4973:4;4965:6;4961:17;4951:27;;4919:61;5026:2;5018:6;5015:14;4995:18;4992:38;4989:161;;5072:10;5067:3;5063:20;5060:1;5053:31;5107:4;5104:1;5097:15;5135:4;5132:1;5125:15;4989:161;;4776:380;;;:::o;6693:409::-;6895:2;6877:21;;;6934:2;6914:18;;;6907:30;6973:34;6968:2;6953:18;;6946:62;-1:-1:-1;;;7039:2:32;7024:18;;7017:43;7092:3;7077:19;;6693:409::o;7870:496::-;8049:3;8087:6;8081:13;8103:66;8162:6;8157:3;8150:4;8142:6;8138:17;8103:66;:::i;:::-;8232:13;;8191:16;;;;8254:70;8232:13;8191:16;8301:4;8289:17;;8254:70;:::i;:::-;8340:20;;7870:496;-1:-1:-1;;;;7870:496:32:o;9319:545::-;9421:2;9416:3;9413:11;9410:448;;;9457:1;9482:5;9478:2;9471:17;9527:4;9523:2;9513:19;9597:2;9585:10;9581:19;9578:1;9574:27;9568:4;9564:38;9633:4;9621:10;9618:20;9615:47;;;-1:-1:-1;9656:4:32;9615:47;9711:2;9706:3;9702:12;9699:1;9695:20;9689:4;9685:31;9675:41;;9766:82;9784:2;9777:5;9774:13;9766:82;;;9829:17;;;9810:1;9799:13;9766:82;;;9770:3;;;9319:545;;;:::o;10040:1352::-;10166:3;10160:10;10193:18;10185:6;10182:30;10179:56;;;10215:18;;:::i;:::-;10244:97;10334:6;10294:38;10326:4;10320:11;10294:38;:::i;:::-;10288:4;10244:97;:::i;:::-;10396:4;;10460:2;10449:14;;10477:1;10472:663;;;;11179:1;11196:6;11193:89;;;-1:-1:-1;11248:19:32;;;11242:26;11193:89;-1:-1:-1;;9997:1:32;9993:11;;;9989:24;9985:29;9975:40;10021:1;10017:11;;;9972:57;11295:81;;10442:944;;10472:663;9266:1;9259:14;;;9303:4;9290:18;;-1:-1:-1;;10508:20:32;;;10626:236;10640:7;10637:1;10634:14;10626:236;;;10729:19;;;10723:26;10708:42;;10821:27;;;;10789:1;10777:14;;;;10656:19;;10626:236;;;10630:3;10890:6;10881:7;10878:19;10875:201;;;10951:19;;;10945:26;-1:-1:-1;;11034:1:32;11030:14;;;11046:3;11026:24;11022:37;11018:42;11003:58;10988:74;;10875:201;-1:-1:-1;;;;;11122:1:32;11106:14;;;11102:22;11089:36;;-1:-1:-1;10040:1352:32:o;11397:401::-;11599:2;11581:21;;;11638:2;11618:18;;;11611:30;11677:34;11672:2;11657:18;;11650:62;-1:-1:-1;;;11743:2:32;11728:18;;11721:35;11788:3;11773:19;;11397:401::o;12923:414::-;13125:2;13107:21;;;13164:2;13144:18;;;13137:30;13203:34;13198:2;13183:18;;13176:62;-1:-1:-1;;;13269:2:32;13254:18;;13247:48;13327:3;13312:19;;12923:414::o;13342:489::-;-1:-1:-1;;;;;13611:15:32;;;13593:34;;13663:15;;13658:2;13643:18;;13636:43;13710:2;13695:18;;13688:34;;;13758:3;13753:2;13738:18;;13731:31;;;13536:4;;13779:46;;13805:19;;13797:6;13779:46;:::i;:::-;13771:54;13342:489;-1:-1:-1;;;;;;13342:489:32:o;13836:249::-;13905:6;13958:2;13946:9;13937:7;13933:23;13929:32;13926:52;;;13974:1;13971;13964:12;13926:52;14006:9;14000:16;14025:30;14049:5;14025:30;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "COST()": "bf8fbbd2",
    "MAX_SUPPLY()": "32cb6b0c",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "getApproved(uint256)": "081812fc",
    "isApprovedForAll(address,address)": "e985e9c5",
    "mint()": "1249c58b",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "renounceOwnership()": "715018a6",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"COST\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Bugs.sol\":\"Bugs\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef0fb6e809779426dc2ac201149bbad4aecdc5810874f2843b050e8b5fef8d30\",\"dweb:/ipfs/QmPDRjaNxmcyxLUKvv8Fxk5eWcf7xvC5S9JpbtqvE7Cadu\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x5c3501c1b70fcfc64417e9da5cc6a3597191baa354781e508e1e14cc0e50a038\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899c87a849a94c848818d0afede6961d2c87665af1dd23a5c983e78981a65691\",\"dweb:/ipfs/QmUeFDffQRDmX87FX3MRxN3bmpUxDTWpWLwPJzeAJ3yF6H\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"src/Bugs.sol\":{\"keccak256\":\"0xf88647857baf6cb72d85a2578d0878a26f0284659ea7d3909b0ffd0635652455\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f14efa5e3d3b10fdcccf012124b6f8a53667f9ac97ce5569a2ce179da2882dc7\",\"dweb:/ipfs/QmNTo1ySb1rJJ2ZqTzyShLpksZnaYKeNATbsRafQuM4jA5\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Withdraw",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "COST",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_SUPPLY",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {IERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenURI(uint256)": {
            "details": "See {IERC721Metadata-tokenURI}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Bugs.sol": "Bugs"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118",
        "urls": [
          "bzz-raw://ef0fb6e809779426dc2ac201149bbad4aecdc5810874f2843b050e8b5fef8d30",
          "dweb:/ipfs/QmPDRjaNxmcyxLUKvv8Fxk5eWcf7xvC5S9JpbtqvE7Cadu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
        "keccak256": "0x5c3501c1b70fcfc64417e9da5cc6a3597191baa354781e508e1e14cc0e50a038",
        "urls": [
          "bzz-raw://899c87a849a94c848818d0afede6961d2c87665af1dd23a5c983e78981a65691",
          "dweb:/ipfs/QmUeFDffQRDmX87FX3MRxN3bmpUxDTWpWLwPJzeAJ3yF6H"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Counters.sol": {
        "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        "urls": [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "src/Bugs.sol": {
        "keccak256": "0xf88647857baf6cb72d85a2578d0878a26f0284659ea7d3909b0ffd0635652455",
        "urls": [
          "bzz-raw://f14efa5e3d3b10fdcccf012124b6f8a53667f9ac97ce5569a2ce179da2882dc7",
          "dweb:/ipfs/QmNTo1ySb1rJJ2ZqTzyShLpksZnaYKeNATbsRafQuM4jA5"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Bugs.sol",
    "id": 32036,
    "exportedSymbols": {
      "Address": [
        30772
      ],
      "Bugs": [
        32035
      ],
      "Context": [
        30794
      ],
      "Counters": [
        30868
      ],
      "ERC165": [
        31067
      ],
      "ERC721": [
        30156
      ],
      "ERC721URIStorage": [
        30415
      ],
      "IERC165": [
        31079
      ],
      "IERC721": [
        30272
      ],
      "IERC721Metadata": [
        30442
      ],
      "IERC721Receiver": [
        30290
      ],
      "Math": [
        31944
      ],
      "Ownable": [
        29229
      ],
      "Strings": [
        31043
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:1149:30",
    "nodes": [
      {
        "id": 31946,
        "nodeType": "PragmaDirective",
        "src": "37:24:30",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 31947,
        "nodeType": "ImportDirective",
        "src": "65:87:30",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "file": "openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32036,
        "sourceUnit": 30416,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31948,
        "nodeType": "ImportDirective",
        "src": "154:61:30",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "openzeppelin-contracts/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32036,
        "sourceUnit": 29230,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31949,
        "nodeType": "ImportDirective",
        "src": "217:61:30",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "file": "openzeppelin-contracts/contracts/utils/Counters.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32036,
        "sourceUnit": 30869,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32035,
        "nodeType": "ContractDefinition",
        "src": "280:904:30",
        "nodes": [
          {
            "id": 31957,
            "nodeType": "UsingForDirective",
            "src": "331:36:30",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 31954,
              "name": "Counters",
              "nameLocations": [
                "337:8:30"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30868,
              "src": "337:8:30"
            },
            "typeName": {
              "id": 31956,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31955,
                "name": "Counters.Counter",
                "nameLocations": [
                  "350:8:30",
                  "359:7:30"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30800,
                "src": "350:16:30"
              },
              "referencedDeclaration": 30800,
              "src": "350:16:30",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$30800_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "id": 31960,
            "nodeType": "VariableDeclaration",
            "src": "373:34:30",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_tokenIds",
            "nameLocation": "398:9:30",
            "scope": 32035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$30800_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 31959,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31958,
                "name": "Counters.Counter",
                "nameLocations": [
                  "373:8:30",
                  "382:7:30"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30800,
                "src": "373:16:30"
              },
              "referencedDeclaration": 30800,
              "src": "373:16:30",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$30800_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "id": 31963,
            "nodeType": "VariableDeclaration",
            "src": "416:39:30",
            "nodes": [],
            "constant": true,
            "functionSelector": "32cb6b0c",
            "mutability": "constant",
            "name": "MAX_SUPPLY",
            "nameLocation": "440:10:30",
            "scope": 32035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 31961,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "416:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3238",
              "id": 31962,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "453:2:30",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_28_by_1",
                "typeString": "int_const 28"
              },
              "value": "28"
            },
            "visibility": "public"
          },
          {
            "id": 31966,
            "nodeType": "VariableDeclaration",
            "src": "462:38:30",
            "nodes": [],
            "constant": true,
            "functionSelector": "bf8fbbd2",
            "mutability": "constant",
            "name": "COST",
            "nameLocation": "486:4:30",
            "scope": 32035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 31964,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "462:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 31965,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "493:7:30",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "id": 31969,
            "nodeType": "VariableDeclaration",
            "src": "507:95:30",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "TOKEN_URI",
            "nameLocation": "523:9:30",
            "scope": 32035,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 31967,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "507:6:30",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "697066732f62616679626569656e67796a36656c6d727477623373793472366c333368736a61627533697637346e75737a3478797335696537626774637073752f",
              "id": 31968,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "535:67:30",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_6bd99f9b4169f1489e9f9dc23a8e6f54b7f97f44b603d39454f6131466bc6ea6",
                "typeString": "literal_string \"ipfs/bafybeiengyj6elmrtwb3sy4r6l33hsjabu3iv74nusz4xys5ie7bgtcpsu/\""
              },
              "value": "ipfs/bafybeiengyj6elmrtwb3sy4r6l33hsjabu3iv74nusz4xys5ie7bgtcpsu/"
            },
            "visibility": "internal"
          },
          {
            "id": 31977,
            "nodeType": "FunctionDefinition",
            "src": "609:37:30",
            "nodes": [],
            "body": {
              "id": 31976,
              "nodeType": "Block",
              "src": "644:2:30",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "42756773",
                    "id": 31972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "630:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_cfaf1f949e7ca511abb85173f11c9afb0454756d23c1fa356cfcbba4d3a8e186",
                      "typeString": "literal_string \"Bugs\""
                    },
                    "value": "Bugs"
                  },
                  {
                    "hexValue": "4242",
                    "id": 31973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "638:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_87c10e0ba2a19c0361dc81a5ffb49230444adc54e1e58be95a7265285d954db3",
                      "typeString": "literal_string \"BB\""
                    },
                    "value": "BB"
                  }
                ],
                "id": 31974,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 31971,
                  "name": "ERC721",
                  "nameLocations": [
                    "623:6:30"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30156,
                  "src": "623:6:30"
                },
                "nodeType": "ModifierInvocation",
                "src": "623:20:30"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 31970,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "620:2:30"
            },
            "returnParameters": {
              "id": 31975,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "644:0:30"
            },
            "scope": 32035,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31983,
            "nodeType": "EventDefinition",
            "src": "654:44:30",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364",
            "name": "Withdraw",
            "nameLocation": "660:8:30",
            "parameters": {
              "id": 31982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31979,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "677:3:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 31983,
                  "src": "669:11:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31978,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "669:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31981,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "690:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 31983,
                  "src": "682:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31980,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "682:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "668:29:30"
            }
          },
          {
            "id": 32024,
            "nodeType": "FunctionDefinition",
            "src": "706:367:30",
            "nodes": [],
            "body": {
              "id": 32023,
              "nodeType": "Block",
              "src": "737:336:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 31990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 31987,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "756:3:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 31988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "760:5:30",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "756:9:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 31989,
                          "name": "COST",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31966,
                          "src": "769:4:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "756:17:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742066756e6473",
                        "id": 31991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "775:20:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
                          "typeString": "literal_string \"Insufficient funds\""
                        },
                        "value": "Insufficient funds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
                          "typeString": "literal_string \"Insufficient funds\""
                        }
                      ],
                      "id": 31986,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "748:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 31992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "748:48:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31993,
                  "nodeType": "ExpressionStatement",
                  "src": "748:48:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 31999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 31995,
                          "name": "MAX_SUPPLY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31963,
                          "src": "815:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 31996,
                              "name": "_tokenIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31960,
                              "src": "829:9:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$30800_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 31997,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "839:7:30",
                            "memberName": "current",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30812,
                            "src": "829:17:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$30800_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$30800_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                            }
                          },
                          "id": 31998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "829:19:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "815:33:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e206e6f74206d696e7420616e796d6f7265",
                        "id": 32000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "850:26:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b677d31874919041b8b81c3f25fc8a5d80f4ac05bac82d00a21ebf315fb1967e",
                          "typeString": "literal_string \"You can not mint anymore\""
                        },
                        "value": "You can not mint anymore"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b677d31874919041b8b81c3f25fc8a5d80f4ac05bac82d00a21ebf315fb1967e",
                          "typeString": "literal_string \"You can not mint anymore\""
                        }
                      ],
                      "id": 31994,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "807:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "807:70:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32002,
                  "nodeType": "ExpressionStatement",
                  "src": "807:70:30"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 32003,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31960,
                        "src": "936:9:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$30800_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 32005,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "946:9:30",
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30826,
                      "src": "936:19:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$30800_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$30800_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 32006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "936:21:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32007,
                  "nodeType": "ExpressionStatement",
                  "src": "936:21:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32009,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "978:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "982:6:30",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "978:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 32011,
                            "name": "_tokenIds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31960,
                            "src": "990:9:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$30800_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 32012,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1000:7:30",
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30812,
                          "src": "990:17:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$30800_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$30800_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 32013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "990:19:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 32008,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        29724,
                        29753
                      ],
                      "referencedDeclaration": 29724,
                      "src": "968:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 32014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "968:42:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32015,
                  "nodeType": "ExpressionStatement",
                  "src": "968:42:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 32017,
                            "name": "_tokenIds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31960,
                            "src": "1034:9:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$30800_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 32018,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1044:7:30",
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30812,
                          "src": "1034:17:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$30800_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$30800_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 32019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1034:19:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 32020,
                        "name": "TOKEN_URI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31969,
                        "src": "1055:9:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 32016,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30384,
                      "src": "1021:12:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 32021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1021:44:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32022,
                  "nodeType": "ExpressionStatement",
                  "src": "1021:44:30"
                }
              ]
            },
            "functionSelector": "1249c58b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "715:4:30",
            "parameters": {
              "id": 31984,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "719:2:30"
            },
            "returnParameters": {
              "id": 31985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "737:0:30"
            },
            "scope": 32035,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32034,
            "nodeType": "FunctionDefinition",
            "src": "1081:98:30",
            "nodes": [],
            "body": {
              "id": 32033,
              "nodeType": "Block",
              "src": "1134:45:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 32029,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31960,
                        "src": "1152:9:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$30800_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 32030,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1162:7:30",
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30812,
                      "src": "1152:17:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$30800_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$30800_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 32031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1152:19:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 32028,
                  "id": 32032,
                  "nodeType": "Return",
                  "src": "1145:26:30"
                }
              ]
            },
            "functionSelector": "18160ddd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "1090:11:30",
            "parameters": {
              "id": 32025,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1101:2:30"
            },
            "returnParameters": {
              "id": 32028,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32027,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32034,
                  "src": "1125:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32026,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1125:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1124:9:30"
            },
            "scope": 32035,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 31950,
              "name": "ERC721URIStorage",
              "nameLocations": [
                "297:16:30"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30415,
              "src": "297:16:30"
            },
            "id": 31951,
            "nodeType": "InheritanceSpecifier",
            "src": "297:16:30"
          },
          {
            "baseName": {
              "id": 31952,
              "name": "Ownable",
              "nameLocations": [
                "315:7:30"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29229,
              "src": "315:7:30"
            },
            "id": 31953,
            "nodeType": "InheritanceSpecifier",
            "src": "315:7:30"
          }
        ],
        "canonicalName": "Bugs",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          32035,
          29229,
          30415,
          30156,
          30442,
          30272,
          31067,
          31079,
          30794
        ],
        "name": "Bugs",
        "nameLocation": "289:4:30",
        "scope": 32036,
        "usedErrors": [],
        "usedEvents": [
          29130,
          30171,
          30180,
          30189,
          31983
        ]
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 30
}